<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ShellSettingsPage" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="ShellFunktionPage" xml:space="preserve">
    <value>InfoPage</value>
  </data>
  <data name="ShellIconSavePage" xml:space="preserve">
    <value>IconSave</value>
  </data>
  <data name="ShellHauptseitePage" xml:space="preserve">
    <value>Hauptseite</value>
  </data>
  <data name="ShellGoBackButton" xml:space="preserve">
    <value>Go back</value>
  </data>
  <data name="ShellHamburgerButtonName" xml:space="preserve">
    <value>Open or close navigation</value>
  </data>
  <data name="AppDisplayName" xml:space="preserve">
    <value>MIM</value>
    <comment>Monitor Icon Manager</comment>
  </data>
  <data name="FP_00_Bo_FehlerTB00" xml:space="preserve">
    <value>Letzte Fehlermeldung:</value>
    <comment>Bo = Border TB =TextBlock</comment>
  </data>
  <data name="FP_00_Bo_FehlerTB02" xml:space="preserve">
    <value>Hier wird die letzte Fehlermeldung angezeigt. Behebe dieser und führe die gewünschte Aktion erneut durch. Fehler bei der Initialisierung oder beim Lesen der Daten, erfordert genaue Aufmerksamkeit.</value>
  </data>
  <data name="FP_0_Title" xml:space="preserve">
    <value>Info Seite</value>
    <comment>FP = FunktionPage 0 = ungefähre reihenfollge</comment>
  </data>
  <data name="FP_02_Bo_InfoTB00" xml:space="preserve">
    <value>Info Texte:</value>
  </data>
  <data name="FP_02_Bo_InfoTB01" xml:space="preserve">
    <value>Letzte Fehlermeldung:</value>
  </data>
  <data name="FP_10_Bo_StatusTB00" xml:space="preserve">
    <value>Allgemeine Statuse:</value>
  </data>
  <data name="FP_10_Bo_StatusTB01" xml:space="preserve">
    <value>Benutzer:</value>
  </data>
  <data name="FP_10_Bo_StatusTB02" xml:space="preserve">
    <value>Ausgewählter M.:</value>
  </data>
  <data name="FP_10_Bo_StatusTB03" xml:space="preserve">
    <value>Inizialisiert:</value>
  </data>
  <data name="FP_10_Bo_StatusTB04" xml:space="preserve">
    <value>Modus:</value>
  </data>
  <data name="FP_10_Bo_StatusTB05" xml:space="preserve">
    <value>Fehler Neuladen:</value>
  </data>
  <data name="FP_12_Im_DOImage_TT" xml:space="preserve">
    <value>DesktopOk Status:
  Hiermit werden Die Statuse angezeigt.
    Donwload fertig: bei Grün Erfolgreich runtergeladen. 
    Icon Pos Save: bei Grün Icon Positionen in extra Datei Gespeichert. 
    Daten Gelesen: bei Grün wurden Informatonen aus Datei gelesen und lesbar gespeichert.</value>
    <comment>Im = Image TT = ToolTip</comment>
  </data>
  <data name="FP_14_Im_MMImage_TT" xml:space="preserve">
    <value>MultiMonitorTool Status:
  Hiermit werden Die Statuse angezeigt.
    Donwload fertig: bei Grün Erfolgreich runtergeladen.
    Monitor Configs Save: bei Grün alle Monitor Einstellungen in extra Config Datei Gespeichert.
    Monitor Infos Save: bei Grün wurden Informatonen aus Datei gelesen und lesbar gespeichert.</value>
  </data>
  <data name="HP_00_Bu_btnReload_TT" xml:space="preserve">
    <value>Daten neu Lesen:
  Hiermit werden Monitordaten und Iconposition neu gelesen u. Gespeichert.
  Gespeicherte Daten werden überschrieben also vorsichtig.</value>
    <comment>Bu = Button</comment>
  </data>
  <data name="HP_00_Bu_Moni1_TT" xml:space="preserve">
    <value>Monitor 1:
  Angezeigte Monitore haben ungefähr die Position der Windows Einstellung.
  Dies dient zur Übersicht, falls Namen nicht bekannt.
  Es werden auch: Namen, Aktivität und ob Primär dargestellt.
  Mit dem Klick wählst du den Monitor aus, um damit weiter zu Arbeiten.
  Monitorname Blau = Primer Monitor; Feld stark ausgegraut = Monitor inaktiv.</value>
  </data>
  <data name="HP_00_Bu_Moni2_TT" xml:space="preserve">
    <value>Monitor 2:
  Angezeigte Monitore haben ungefähr die Position der Windows Einstellung.
  Dies dient zur Übersicht, falls Namen nicht bekannt.
  Es werden auch: Namen, Aktivität und ob Primär dargestellt.
  Mit dem Klick wählst du den Monitor aus, um damit weiter zu Arbeiten.
  Monitorname Blau = Primer Monitor; Feld stark ausgegraut = Monitor inaktiv.</value>
  </data>
  <data name="HP_00_Bu_Moni3_TT" xml:space="preserve">
    <value>Monitor 3:
  Angezeigte Monitore haben ungefähr die Position der Windows Einstellung.
  Dies dient zur Übersicht, falls Namen nicht bekannt.
  Es werden auch: Namen, Aktivität und ob Primär dargestellt.
  Mit dem Klick wählst du den Monitor aus, um damit weiter zu Arbeiten.
  Monitorname Blau = Primer Monitor; Feld stark ausgegraut = Monitor inaktiv.</value>
  </data>
  <data name="HP_00_Bu_Moni4_TT" xml:space="preserve">
    <value>Monitor 4:
  Angezeigte Monitore haben ungefähr die Position der Windows Einstellung.
  Dies dient zur Übersicht, falls Namen nicht bekannt.
  Es werden auch: Namen, Aktivität und ob Primär dargestellt.
  Mit dem Klick wählst du den Monitor aus, um damit weiter zu Arbeiten.
  Monitorname Blau = Primer Monitor; Feld stark ausgegraut = Monitor inaktiv.</value>
  </data>
  <data name="HP_0_Title" xml:space="preserve">
    <value>Monitor Icon Manager</value>
    <comment>HP = HauptseitePage</comment>
  </data>
  <data name="HP_10_Bo_InfosTB01" xml:space="preserve">
    <value>Monitor Infos</value>
  </data>
  <data name="HP_10_Bo_InfosTB02" xml:space="preserve">
    <value>Monitor Name:</value>
  </data>
  <data name="HP_10_Bo_InfosTB03" xml:space="preserve">
    <value>Monitor Nummer:</value>
  </data>
  <data name="HP_10_Bo_InfosTB04" xml:space="preserve">
    <value>Auflösung:</value>
  </data>
  <data name="HP_10_Bo_InfosTB05" xml:space="preserve">
    <value>Position:</value>
  </data>
  <data name="HP_10_Bo_InfosTB06" xml:space="preserve">
    <value>Aktiv Status:</value>
  </data>
  <data name="HP_10_Bo_InfosTB07" xml:space="preserve">
    <value>Primärstatus:</value>
  </data>
  <data name="HP_10_Bo_InfosTB08" xml:space="preserve">
    <value>Frequenz:</value>
  </data>
  <data name="HP_10_Bo_InfosTB09" xml:space="preserve">
    <value>Max Auflösung:</value>
  </data>
  <data name="HP_10_Bo_InfosTB010" xml:space="preserve">
    <value>Kurze Monitor ID:</value>
  </data>
  <data name="HP_10_Bo_InfosTB011" xml:space="preserve">
    <value>Monitor S.Nr:</value>
  </data>
  <data name="HP_10_Bo_InfosTB012" xml:space="preserve">
    <value>Gespeicherte Icons:</value>
  </data>
  <data name="HP_10_Bo_InfosTB013" xml:space="preserve">
    <value>Icon Liste</value>
  </data>
  <data name="HP_10_Bo_Infos_TT" xml:space="preserve">
    <value>Monitorinfos:
  hier werden alle Monitorinfos vom ausgewählten Monitor angezeigt
  diese werden bei der Initialisierung gelesen</value>
  </data>
  <data name="HP_01_Bo_PannelBu_btnCreateShortCut_TT" xml:space="preserve">
    <value>Verknüpfung erstellen:
  es wird ein Icon auf den Desktopgespeichert der das aus
  und Einschalten sowie das Verschieben der Icons ausführt,
  dies ist dann von Monitor zu Monitor einzeln steuerbar.</value>
  </data>
  <data name="HP_01_Bo_PannelBu_btnIconsVerschieben_TT" xml:space="preserve">
    <value>Icons verschieben:
  Hier werden von den ausgewählten Monitor die Icons verschoben,
  die zuvor in der Icon Auswahl gespeichert wurden. Beim zweiten Mal drücken mit dem
  gleichen ausgewählten Monitor, werden die Icons wieder zurückverschoben.</value>
  </data>
  <data name="HP_01_Bo_PannelBu_btnMonitorSwitch_TT" xml:space="preserve">
    <value>Monitor Schalter:
  Hier kannst du den ausgewählten Monitor aktivieren oder deaktivieren,
  dabei werden keine Icons verschoben jedoch werden Daten gelesen.</value>
  </data>
  <data name="HP_01_Bo_PannelBu_btnSaveIconPos_TT" xml:space="preserve">
    <value>Icon Auswahl:
  Hiermit kannst du bestimmen welcher Icons verschoben werden sollen,
  wenn ein Monitor deaktiviert wird.</value>
  </data>
  <data name="HP_01_Bo_PannelTB11" xml:space="preserve">
    <value>Steuerpannel:</value>
  </data>
  <data name="HP_01_Bo_PannelTB12" xml:space="preserve">
    <value>Wähle zuerst ein Monitor aus indem du drauf klickst, die Auswahl bleibt so lange bestehen bis du das Fenster wechselst</value>
  </data>
  <data name="HP_01_Bo_PannelTB13" xml:space="preserve">
    <value>Wenn du über einen Button mit deiner Maus stehenbleibst, Erscheinen weitere Informationen dazu.</value>
  </data>
  <data name="HP_01_Bo_PannelTB14" xml:space="preserve">
    <value>Das erneute Lesen der Daten, nur mit vollen Setup durchführen, sonst gibt es Komplikation beim Wiederherstellen.</value>
  </data>
  <data name="ISP_00_LV_btnListeSpeichern" xml:space="preserve">
    <value>Speichern</value>
    <comment>LV = ListView</comment>
  </data>
  <data name="ISP_00_LV_btnListeSpeichern_TT" xml:space="preserve">
    <value>Icons zuweisen:
  Speichere alle gewählten Icons.
  Wenn in Monitor Liste schon Icons existieren,
  kannst du entweder alle überschreiben, einzeln hinzufügen oder abbrechen.</value>
  </data>
  <data name="ISP_00_LV_Header1" xml:space="preserve">
    <value>Icons</value>
  </data>
  <data name="ISP_00_LV_Header2" xml:space="preserve">
    <value>Pfad</value>
  </data>
  <data name="ISP_0_Title" xml:space="preserve">
    <value>Icons Zusweisen</value>
    <comment>ISP = IconSavePage</comment>
  </data>
  <data name="AF_Text" xml:space="preserve">
    <value>Gewählte Icons zu einem Monitor zuweisen mit einem Klick auf gewünschten
Monitor Button, wenn der Monitor schon zugewiesene Icons hat,
gibt es Folgende Möglichkeiten:
alle überschreiben; einzeln hinzufügen oder abbrechen</value>
  </data>
  <data name="AF_Title" xml:space="preserve">
    <value>Icons Zuweisen</value>
    <comment>AF = AuswahlFürISP</comment>
  </data>
  <data name="SP_0_Title" xml:space="preserve">
    <value>Einstellungen</value>
    <comment>SP = SettingsPage</comment>
  </data>
  <data name="SP_1_ThemeRB1" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="SP_1_ThemeRB2" xml:space="preserve">
    <value>Dunkel-Blau</value>
  </data>
  <data name="SP_1_ThemeRB3" xml:space="preserve">
    <value>Hell-Blau</value>
  </data>
  <data name="SP_1_ThemeTB1" xml:space="preserve">
    <value>Personalieseieren</value>
  </data>
  <data name="SP_1_ThemeTB2" xml:space="preserve">
    <value>Theme wählen</value>
  </data>
  <data name="SP_2_ConfigBu2_btnSettingPath_TT" xml:space="preserve">
    <value>Pfad ändern:
  Wähle einen Pfad in dem alle Hintergrunddateien gespeichert werden soll.
  In diesen Ordner werden die Icons verschoben oder config Dateien gespeichert.
  Nach dem ändern wird die Initialisierung erneut durchgeführt und alle Daten gelöscht.</value>
  </data>
  <data name="SP_2_ConfigBu3_btnReload" xml:space="preserve">
    <value>Neu Laden</value>
  </data>
  <data name="SP_2_ConfigBu3_btnReload_TT" xml:space="preserve">
    <value>Neu Laden:
  Hier kannst du alle Monitordaten neu laden,
  ohne darauf zu achten ob Monitore deaktiviert sind oder Icons verstaut.
  Wichtigige Daten werden evtl Falsch Gespeichert wie z.B.:
  Icon Position; Monitor Auflösung etc.
  
  Achte drauf was du tust!</value>
  </data>
  <data name="SP_2_ConfigBu3_btnReset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="SP_2_ConfigBu3_btnReset_TT" xml:space="preserve">
    <value>Reset:
  Hier werden alle Hintergrundsdaten gelöscht.
  Anschließend wird die Initialisierung erneut durchgeführt.
  Nur durchführen wenn du absolut sicher bist oder im Fehlerfall!</value>
  </data>
  <data name="SP_2_ConfigTB1" xml:space="preserve">
    <value>Pfad für Hintergrund Daten:</value>
  </data>
  <data name="SP_2_ConfigTB3" xml:space="preserve">
    <value>Gespeicherte Einstellungen zurücksetzen oder Neu Laden:</value>
  </data>
  <data name="SP_3_AboutTB1" xml:space="preserve">
    <value>Über das Programm</value>
  </data>
  <data name="SP_3_AboutTB3" xml:space="preserve">
    <value>Dieses Programm ist zum Steuern von Monitoren und dessen Icons da. 
Entwickelt von RyukYagami666, einen Programier Hobbyist.</value>
  </data>
  <data name="FP_00_Bo_FehlerResetBu2_TT" xml:space="preserve">
    <value>Fehler Resetten: 
  In der ersten Zeile steht die Funktion dessen Methode, in den der Fehler passiert ist. 
  Danach kommt der Fehlertext, meist mit fehler und Tipps. 
  Zum Schluss ein Zeitstempel wann der Fehler passiert ist. 
  Wenn in der Fehler hier resetet wurde, heißt es nicht das der Fehler weg ist,
  dafür muss man die Nachricht lesen und handeln.</value>
  </data>
</root>